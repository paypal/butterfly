apply plugin: 'application'

mainClassName = 'com.paypal.butterfly.cli.ButterflyCliApp'

dependencies {

    compile project(':butterfly-api')
    compile project(':butterfly-extensions-api')
    runtime project(':butterfly-core')
    compile lib.jopt_simple,
            lib.gson,
            lib.commons_io,
            lib.log4j_api,
            lib.log4j_core,
            lib.disruptor
    compile (lib.log4j_slf4j_impl) {
        // favor newer 1.7.30
        exclude(module: 'slf4j-api')
    }
    compile (lib.spring_boot_starter) {
        exclude(module: 'commons-logging')
        exclude(module: 'logback-classic')

        // don't redirect log4j2 logs to slf4j because we bind slf4j to log4j2...
        exclude(module: 'log4j-to-slf4j')
    }
    testCompile project(':butterfly-utilities')
    testCompile(lib.testng) {
        exclude(module: 'aopalliance')
        exclude(module: 'guava')
    }
    testCompile lib.mockito_all,
                lib.hamcrest,
                lib.javassist,
                lib.objenesis
    testCompile(lib.powermock_api_mockito) {
        // favor version pulled in by lib.hamcrest
        exclude(module: 'hamcrest-core')

        // favor version pulled in by lib.javassist
        exclude(module: 'javassist')

        // favor version pulled in by lib.objenesis
        exclude(module: 'objenesis')
    }

    testCompile(lib.powermock_module_testng) {
        // favor version pulled in by lib.testng
        exclude(module: 'testng')
        
        // favor version pulled in by lib.javassist
        exclude(module: 'javassist')
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.paypal.butterfly.cli.ButterflyCliApp',
                'Implementation-Version': version,
                'Implementation-Name': name,
                'Implementation-Vendor': 'PayPal'
    }
}

test {
    forkEvery = 1
}

test.useTestNG()
